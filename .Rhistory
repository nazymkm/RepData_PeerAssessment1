add2 <- function(x,y){
x+y
}
add2(3,5)
above <- funtion(x,n){
use <- x>n
x[use]
}
above <- funtion(x,n){
use <- x>n
x[use]
}
above <- function(x,n){
use <- x>n
x[use]
}
x <- 1:20
above(x,10)
library(swirl)
swirl()
raw_data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
data <- raw_data[as.Date(raw_data[,"Date"],"%d/%m/%Y") == as.Date("2007-02-01", "%Y-%m-%d") | as.Date(raw_data[,"Date"],"%d/%m/%Y") == as.Date("2007-02-02", "%Y-%m-%d"),]
raw_data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
data <- raw_data[as.Date(raw_data[,"Date"],"%d/%m/%Y") == as.Date("2007-02-01", "%Y-%m-%d") | as.Date(raw_data[,"Date"],"%d/%m/%Y") == as.Date("2007-02-02", "%Y-%m-%d"),]
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?trellis.par.set()
q()
unzip("activity.zip")
activity <- read.csv("activity.csv")
unzip("activity.zip")
setwd("C:/Users/aibas/RepData_PeerAssessment1")
ls
unzip("activity.zip")
activity <- read.csv("activity.csv")
str(activity)
activity$date<-as.Date(activity$date,"%Y-%m-%d")
str(activity)
daylysteps <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
head(daylysteps)
hist(daylysteps$steps)
hist(daylysteps$steps,xlab="Steps")
hist(daylysteps$steps,xlab="Steps",title="Histogram of total number of steps taken each day"")
hist(daylysteps$steps,xlab="Steps",title="Histogram of total number of steps taken each day")
hist(daylysteps$steps,xlab="Steps",main ="Histogram of total number of steps taken each day")
hist(daylysteps$steps,xlab="Steps")
dailysteps <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
View(dailysteps)
hist(dailysteps$steps,xlab="Steps taken each day")
rm(daylysteps)
mean(dailysteps$steps)
median(dailysteps$steps)
View(activity)
averageSteps <- aggregate(steps ~ interval, data = activity, FUN = mean, na.rm = TRUE)
plot(averageSteps,type="l")
which.max(averageSteps$steps)
averageSteps$interval[which.max(averageSteps$steps)]
sum(is.na(activity))
View(averageSteps)
filled <- merge(activity,averageSteps,by="interval")
View(filled)
?arrange()
?order()
filled$steps.x[is.na(filled$steps.x)] <- filled$steps.y[is.na(filled$steps.x)]
filled_steps <- aggregate(steps.x ~ date, data = filled, FUN = sum)
hist(filled_steps$steps.x,xlab="Steps taken each day")
mean(filled_steps$steps.x)
median(filled_steps$steps.x)
filled_steps$day <- factor((weekdays(filled_steps$date) %in% c('Saturday','Sunday')), levels=c(FALSE, TRUE), labels=c('weekday', 'weekend'))
View(filled_steps)
```{r}
filled$day <- factor((weekdays(filled$date) %in% c('Saturday','Sunday')), levels=c(FALSE, TRUE), labels=c('weekday', 'weekend'))
View(filled)
averageSteps_wk <- aggregate (steps.x ~ interval + day, data = filled, FUN = mean)
View(averageSteps_wk)
library(ggplot2)
p<-ggplot(averageSteps_wk,aes(x=interval,y=steps.x))+geom_point()+geom_line()+facet_grid(.~day)
p
p<-ggplot(averageSteps_wk,aes(x=interval,y=steps.x))+geom_point()+geom_line()+facet_grid(day~.)
p
p<-ggplot(averageSteps_wk,aes(x=interval,y=steps.x))+geom_line()+facet_grid(day~.)
p
library(lattice)
xyplot(steps.x~interval|day, data = averageSteps_wk, type="l")
xyplot(steps.x~interval|day, data = averageSteps_wk, type="l",layout = c(1, 2),xlab="Number of steps",ylab="Interval")
xyplot(steps.x~interval|day, data = averageSteps_wk, type="l",layout = c(1, 2),ylab="Number of steps",xlab="Interval")
